
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // User-specific data
    match /users/{userId} {
      // Allow users to read their own user document (if you store public profiles here)
      // For now, let's assume no direct writes/reads to the /users/{userId} doc itself from client
      allow read: if isOwner(userId);
      // Deny direct writes to the user document from client unless specifically handled
      allow write: if false; 

      // Exercises subcollection
      match /exercises/{exerciseId} {
        allow read, write, delete: if isOwner(userId);
      }

      // Routines subcollection
      match /routines/{routineId} {
        allow read, write, delete: if isOwner(userId);
      }

      // WorkoutLogs subcollection
      // Document ID is YYYY-MM-DD
      match /workoutLogs/{logDate} {
        allow read, write, delete: if isOwner(userId);
      }
      
      // PerformanceEntries collection (NEW RULE)
      // Document ID is the exerciseId
      match /performanceEntries/{exerciseId} {
        allow read, write, delete: if isOwner(userId);
      }
    }
  }
}
